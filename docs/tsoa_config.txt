“entryFile”: this, as its name indicates, is the path to our app.
“controllerPathGlobs”: this is the path to all our controller files. Controller files will contain our actual API end-points and TSOA will then compile every file whose name ends with “-controller.ts” in the “src/controllers/” folder of our application into its JS counterpart and generate our routes from. So remember that when we get to creating our controller files, we will place them inside “src/controllers/” and ensure their file names end with “-controller.ts”.
“outputDirectory”: this is where the output, or the result, of the TSOA computation will live. When TSOA has calculated all our controllers and routes and model objects, it will place the actual specification file in this folder so that we can server it to our clients.
“jwt”: this is the name of the authentication that we are using in this course. JWT or JSON Web Token, which you can read more about here, is a way for an issuer, in this case our web application on Express and Node, to issue temporary credentials to clients that want to connect to it, based on some sort of authentication mechanism such as email and password. Don’t worry about this for now, as I will explain it in full details later on when we get to the authentication part in a chapter of its own.
“routesDir”: this is the folder where TSOA will auto-generate our “routes.ts” files based on the information we will provide it in our controller files.
“authenticationModule”: this is the relative path to the file where we will in a later chapter write the actual function that handles our JWT-based authentication. Again, don’t worry about this so much for now but we will take care of it in a later chapter when we’ll talk about authentication.
